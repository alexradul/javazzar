name: Release Build

on:
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PKG_NAME: javazzar
      PKG_VERSION: 1.0.2
      JAVAZZAR_ARCHIVE: ${{ env.PKG_NAME }}-${{ env.PKG_VERSION }}.zip

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Specify your Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run Webpack build
      - name: Build with Webpack
        run: npx webpack --mode=production

      # Step 5: rename dist folder to javazzar
      - name: Rename dist folder
        run: mv dist javazzar

      # Step 6: Zip the built files into an archive
      - name: Archive build output
        run: zip -r ./${{ env.JAVAZZAR_ARCHIVE }} javazzar/

      # Step 7: Upload built files as release assets
      - name: Upload release assets
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.JAVAZZAR_ARCHIVE }}
          path: ./${{ env.JAVAZZAR_ARCHIVE }}

      # Step 8: Create a release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      # Step 9: Upload release asset to GitHub Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.JAVAZZAR_ARCHIVE }}
          asset_name: ${{ env.JAVAZZAR_ARCHIVE }}
          asset_content_type: application/zipk


